import java.util.Date;

CREATE TABLE cheque (
  chequeNumber TEXT NOT NULL PRIMARY KEY,
  idEmployee TEXT NOT NULL,
  cardNumber TEXT,
  printDate TEXT AS Date NOT NULL,
  sumTotal REAL NOT NULL,
  vat REAL NOT NULL
);


INSERT INTO cheque(chequeNumber, idEmployee, cardNumber, printDate, sumTotal, vat)
VALUES ("28af18c5-e136-11ed-b5ea-0242ac120232", "28af18c2-e136-11ed-b5ea-0242ac120002", NULL, "2022-01-03", 200, 5.5);

INSERT INTO cheque(chequeNumber, idEmployee, cardNumber, printDate, sumTotal, vat)
VALUES ("28af18c6-e136-11ed-b5ea-0242ac120299", "28af20a6-e136-11ed-b5ea-0242ac120002", "28af18c5-e136-11ed-b5ea-0242ac120002", "2022-01-03", 60, 4.5);

getChequeByChequeNumber:
SELECT *
FROM cheque
WHERE chequeNumber = :chequeNumber;

getAllCheques:
SELECT *
FROM cheque;

insertCheque:
INSERT OR REPLACE
INTO cheque
VALUES(?, ?, ?, ?, ?, ?);

deleteChequeByChequeNumber:
DELETE FROM cheque
WHERE chequeNumber = :chequeNumber;


getChequesData:
SELECT c.chequeNumber, c.printDate, s.upc, s.productNumber, s.sellingPrice, p.productName, p.characteristics, e.empl_surname, e.empl_name, c.sumTotal, c.vat
FROM cheque c
JOIN sale s ON c.chequeNumber = s.chequeNumber
JOIN storeProduct sp ON s.upc = sp.upc
JOIN product p ON sp.idProduct = p.idProduct
JOIN employee e ON c.idEmployee = e.id_of_employee
ORDER BY c.chequeNumber;

-- Менеджер: Отримати інформацію про усі чеки,
-- створені певним касиром за певний період часу
-- (з можливістю перегляду куплених товарів у цьому чеку, їх назви, к-сті та ціни);
getAllChecksInfoBySellerWithProductsInDateRange:
SELECT cheque.chequeNumber, cheque.idEmployee, cheque.printDate, product.productName, sale.sellingPrice, sale.productNumber
FROM cheque
JOIN sale ON cheque.chequeNumber = sale.chequeNumber
JOIN storeProduct ON sale.upc = storeProduct.upc
JOIN product ON storeProduct.idProduct = product.idProduct
WHERE cheque.idEmployee = :idEmployee AND date(cheque.printDate) BETWEEN date(:startDate) AND date(:endDate)
ORDER BY cheque.printDate DESC;

-- Менеджер: Визначити загальну кількість одиниць певного товару,
-- проданого за певний період часу.
                getTotalSoldAmountForProduct:
SELECT SUM(sale.productNumber) AS totalSoldAmount
FROM sale
JOIN cheque ON sale.chequeNumber = cheque.chequeNumber
JOIN storeProduct ON storeProduct.upc = sale.upc
WHERE storeProduct.idProduct = :idProduct
AND date(cheque.printDate) BETWEEN date(:startDate) AND date(:endDate);

-- Менеджер: Отримати інформацію про усі чеки,
-- створені усіма касирами за певний період часу
-- (з можливістю перегляду куплених товарів у цьому чеку, їх назва, к-сті та ціни)
getAllChecksInfoWithProductsInDateRange:
SELECT cheque.chequeNumber, cheque.idEmployee, cheque.printDate, product.productName, sale.sellingPrice, sale.productNumber
FROM cheque
JOIN sale ON cheque.chequeNumber = sale.chequeNumber
JOIN storeProduct ON sale.upc = storeProduct.upc
JOIN product ON storeProduct.idProduct = product.idProduct
WHERE date(cheque.printDate) BETWEEN date(:startDate) AND date(:endDate)
ORDER BY cheque.printDate DESC;

-- Менеджер: Визначити загальну суму проданих товарів з чеків,
-- створених певним касиром за певний період часу;
getTotalSalesAmountForSellerInDateRange:
SELECT SUM(cheque.sumTotal) AS totalSalesSum
FROM cheque
WHERE cheque.idEmployee = :idEmployee
AND date(cheque.printDate) BETWEEN date(:startDate) AND date(:endDate);



-- Касир: Переглянути список усіх чеків, що створив касир за цей день
getAllChequesBySellerForToday:
SELECT cheque.*
FROM cheque
INNER JOIN employee ON cheque.idEmployee = employee.id_of_employee
WHERE employee.id_of_employee = :idEmloyee
AND datetime(cheque.printDate) BETWEEN datetime('now', 'start of day') AND datetime('now', 'localtime');

-- Касир: Переглянути список усіх чеків, що створив касир за певний період часу
getAllChequesBySellerInDateRange:
SELECT cheque.*
FROM cheque
INNER JOIN employee ON cheque.idEmployee = employee.id_of_employee
WHERE employee.id_of_employee = :idEpmloyee
AND date(cheque.printDate) BETWEEN date(:startDate) AND date(:endDate);

-- Касир: За номером чеку вивести усю інформацію про даний чек,
-- в тому числі інформацію про назву, к-сть та ціну товарів, придбаних в даному чеку
getCheckDetailedDescription:
SELECT cheque.chequeNumber, cheque.idEmployee, cheque.cardNumber, cheque.printDate, cheque.sumTotal, cheque.vat,
       sale.upc, sale.productNumber, sale.sellingPrice,
       product.productName, product.characteristics
FROM cheque
INNER JOIN sale ON cheque.chequeNumber = sale.chequeNumber
INNER JOIN storeProduct ON sale.upc = storeProduct.upc
INNER JOIN product ON storeProduct.idProduct = product.idProduct
WHERE cheque.chequeNumber = :checkNumber;